<!DOCTYPE html>
<html>

<head>
  <title>Socket.IO Aiden</title>
  <link rel="stylesheet" type="text/css" href="http://localhost:3001/css/style2.css">
</head>

<body>
  <ul id="messages"></ul>
  <form id="form" action="">
    <input id="input" autocomplete="off" /><button>Send</button>
  </form>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    var socket = io();
    var form = document.getElementById('form');
    var input = document.getElementById('input');
    form.addEventListener('submit', function (e) {
      e.preventDefault();
      if (input.value) {
        socket.emit('chat message', input.value);
        input.value = '';
      }
    });
    socket.on('chat message', function (msg) {
      var item = document.createElement('li');
      item.textContent = msg;
      messages.appendChild(item);
      window.scrollTo(0, document.body.scrollHeight);
      /*socket.on("connect_error", (err) => {
        console.log(`connect_error due to ${err.message}`);
      });*/
    });

    if (!window.opener.closed) {
      patchStatus("online");
    }

    window.addEventListener('beforeunload', function (e) {
      e.preventDefault();
      patchStatus("offline");
    });

    function patchStatus(status) {
			let myHeaders = new Headers();
			myHeaders.append('Content-Type', 'application/json');
			myHeaders.append('Accept', 'application/json');
			myHeaders.append('Set-Cookie', 'passPhrase=Hop');
			
      let statusRequest = { "status": status };
      
      
			//let statusRequest = { "status": "offline" };
			let myInit = {
				method: 'PATCH',
				headers: myHeaders,
				credentials: 'same-origin',
				mode: 'cors',
				cache: 'no-store',
				body: JSON.stringify(statusRequest)
			};
			console.log(typeof (myInit.body));
			let myURL = `http://localhost:3001/bot/status/3012`;
			fetch(myURL, myInit)
				.then((httpResponse) => {
					//console.log("rÃ©ponse"+ httpResponse.json());
					return httpResponse.text()
				})
				.then((responseBody) => {
					reloadBotInfos();
					reloadBrainList();
					reloadBrainListToRm();
					console.log(`updating status`);
					//location.reload;
					/*
						//let item = document.createElement("option");
						//item.setAttribute('value',person.personId);
						//item.innerHTML=person.personId;
						//personListElt.appendChild(item);
						
						
						brainListElt.appendChild(createItem(brain));
						
					*/
				})
				.catch((err) => {
					console.log(`ERROR : ${err}${err.stack}`);
				})
		}
  </script>
</body>

</html>