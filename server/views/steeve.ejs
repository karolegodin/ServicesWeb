<!DOCTYPE html>
<html>

<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Steeve</title>
	<link rel="stylesheet" type="text/css" href="/css/style.css">
	<script>
		document.addEventListener('DOMContentLoaded', initInfos);

		let brainListElt;
		let infoListElt;
		let brainListToRm;
		let addBrainButton;
		let rmBrainButton;

		function initInfos() { //actualisation des informations du bot
			infoListElt = document.getElementById("infoListSELECT");
			reloadBotInfos();
		}

		function reloadBotInfos() { //rechargement des informations du bot
			console.log("Je reload la liste des infos");
			while (infoListElt.firstChild) {
				infoListElt.removeChild(infoListElt.firstChild);
			}
			let myHeaders = new Headers();
			myHeaders.append('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
			myHeaders.append('Accept', 'application/json');
			myHeaders.append('Set-Cookie', 'passPhrase=Hop');

			let myInit = {
				method: 'GET',
				headers: myHeaders,
				credentials: 'same-origin',
				mode: 'cors',
				cache: 'no-store'
			};

			let myURL = `http://localhost:3001/bot/3011`;

			fetch(myURL, myInit)
				.then((httpResponse) => {
					for (let field of httpResponse.headers) {
					}
					return httpResponse.json()
				})
				.then((setOfInfos) => {
					console.log(setOfInfos);
					for (let info of setOfInfos) {
						console.log(setOfInfos);
						let item = document.createElement("option");
						item.setAttribute("value", info.name);
						item.setAttribute("value", info.brain);
						item.innerHTML += `Id and port : 3011 `;
						item.innerHTML += "\n";
						item.innerHTML += `Name : ${info.name} `;
						item.innerHTML += "\n";
						item.innerHTML += `Brains : ${info.brain}`;
						item.innerHTML += "\n";
						item.innerHTML += `Status : ${info.status}`;
						infoListElt.appendChild(item);
						console.log(infoListElt);
					}
				})
				.catch((err) => {
					console.log(`ERROR : ${err} ${err.stack}`);
				})
		}
		function initBots() { //actualisation de la liste des bots
			botListElt = document.getElementById("botListSELECT");
			reloadBotList();
		}

		function reloadBotList() { //met à jour la liste de tous les bots par une requête GET
			console.log("Je reload la liste des bots");
			while (botListElt.firstChild) {
				botListElt.removeChild(botListElt.firstChild);
			}
			let myHeaders = new Headers();
			myHeaders.append('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
			myHeaders.append('Accept', 'application/json');
			myHeaders.append('Set-Cookie', 'passPhrase=Hop');

			let myInit = {
				method: 'GET',
				headers: myHeaders,
				credentials: 'same-origin',
				mode: 'cors',
				cache: 'no-store'
			};

			let myURL = `http://localhost:3001/bot`;

			fetch(myURL, myInit)
				.then((httpResponse) => {
					for (let field of httpResponse.headers) {
						console.log(`raw = ${field}`);
					}
					return httpResponse.json()
				})
				.then((setOfBots) => {
					for (let bot of setOfBots) {
						let item = document.createElement("option");
						item.setAttribute("value", bot.name);
						item.innerHTML += ` ${bot.name}`;
						botListElt.appendChild(item);
					}
				})
				.catch((err) => {
					console.log(`ERROR : ${err} ${err.stack}`);
				})
		}

		function initMouth() {//actualisation de la liste des mouths
			mouthListElt = document.getElementById("mouthListSELECT");
			reloadMouthList();
		}

		document.addEventListener('DOMContentLoaded', initBrainsToRm);

		function initBrainsToRm() { //actualisation de la liste de brains de Steeve
			brainListToRm = document.getElementById("brainListToRmSELECT");
			reloadBrainListToRm();
			rmBrainButton = document.getElementById("rmBrainButton");
			rmBrainButton.addEventListener("click", removeBrain);
		}
		function reloadBrainListToRm() { //rechargement de la liste des brains de Steeve par une requête GET
			console.log("Je reload la liste des brains de Steeve");
			while (brainListToRm.firstChild) {
				brainListToRm.removeChild(brainListToRm.firstChild);
			}
			let myHeaders = new Headers();
			myHeaders.append('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
			myHeaders.append('Accept', 'application/json');
			myHeaders.append('Set-Cookie', 'passPhrase=Hop');

			let myInit = {
				method: 'GET',
				headers: myHeaders,
				credentials: 'same-origin',
				mode: 'cors',
				cache: 'no-store'
			};

			let myURL = `http://localhost:3001/bot/3011`;

			fetch(myURL, myInit)
				.then((httpResponse) => {
					for (let field of httpResponse.headers) {
					}
					return httpResponse.json()
				})
				.then((setOfBrainstoRm) => {
					console.log("Liste de cerveaux de Steeve");
					console.log(setOfBrainstoRm[0]);
					for (let bot of setOfBrainstoRm[0].brain) {
						let item = document.createElement("option");
						item.setAttribute("value", bot);
						item.innerHTML += `${bot}`;
						brainListToRm.appendChild(item);
						console.log(brainListToRm);
					}
				})
				.catch((err) => {
					console.log(`ERROR : ${err} ${err.stack}`);
				})
		}

		function reloadMouthList() { //rechargement de la liste des mouths par une requête GET
			while (mouthListElt.firstChild) {
				mouthListElt.removeChild(mouthListElt.firstChild);
			}
			let myHeaders = new Headers();
			myHeaders.append('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
			myHeaders.append('Accept', 'application/json');
			myHeaders.append('Set-Cookie', 'passPhrase=Hop');

			let myInit = {
				method: 'GET',
				headers: myHeaders,
				credentials: 'same-origin',
				mode: 'cors',
				cache: 'no-store'
			};

			let myURL = `http://localhost:3002/mouth`;

			fetch(myURL, myInit)
				.then((httpResponse) => {
					return httpResponse.json()
				})
				.then((setOfMouths) => {
					for (let mouth of setOfMouths) {
						console.log(setOfMouths);
						let item = document.createElement("option");
						item.setAttribute("value", mouth.name);
						item.innerHTML += ` ${mouth.name}`;
						mouthListElt.appendChild(item);
						console.log(mouthListElt);
					}
				})
				.catch((err) => {
					console.log(`ERROR : ${err}${err.stack}`);
				})
		}


		document.addEventListener('DOMContentLoaded', initBrains);

		function initBrains() { //actualisation de la liste des brains
			brainListElt = document.getElementById("brainListSELECT");
			reloadBrainList();
			addBrainButton = document.getElementById("addBrainButton");
			addBrainButton.addEventListener("click", addBrain);
		}

		function reloadBrainList() { //rechargement de la liste des brains avec une requête GET
			console.log("Je reload la liste des brains");
			while (brainListElt.firstChild) {
				brainListElt.removeChild(brainListElt.firstChild);
			}
			let myHeaders = new Headers();
			myHeaders.append('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
			myHeaders.append('Accept', 'application/json');
			myHeaders.append('Set-Cookie', 'passPhrase=Hop');

			let myInit = {
				method: 'GET',
				headers: myHeaders,
				credentials: 'same-origin',
				mode: 'cors',
				cache: 'no-store'
			};

			let myURL = `http://localhost:3003/brain`;

			fetch(myURL, myInit)
				.then((httpResponse) => {
					for (let field of httpResponse.headers) {
						console.log(`raw = ${field}`);
					}
					return httpResponse.json()
				})
				.then((setOfBrains) => {
					for (let brain of setOfBrains) {
						console.log(setOfBrains);
						let item = document.createElement("option");
						item.setAttribute("value", brain.name);
						item.innerHTML += ` ${brain.name}`;
						brainListElt.appendChild(item);
						console.log(brainListElt);
					}
				})
				.catch((err) => {
					console.log(`ERROR : ${err} ${err.stack}`);
				})
		}

		function addBrain(botId) { //ajoute un brain à la liste de brains de Steeve par une requête PATCH
			let brainSelected = `${brainListElt.value}`;
			console.log("Brain choisi : " + brainSelected);
			let myHeaders = new Headers();
			myHeaders.append('Content-Type', 'application/json');
			myHeaders.append('Accept', 'application/json');
			myHeaders.append('Set-Cookie', 'passPhrase=Hop');

			let brainRequest = { "brain": brainSelected };
			let myInit = {
				method: 'PATCH',
				headers: myHeaders,
				credentials: 'same-origin',
				mode: 'cors',
				cache: 'no-store',
				body: JSON.stringify(brainRequest)

			};
			console.log(typeof (myInit.body));
			let myURL = `http://localhost:3001/bot/3011`;

			fetch(myURL, myInit)
				.then((httpResponse) => {
					return httpResponse.text()
				})
				.then((responseBody) => {

					reloadBotInfos();
					reloadBrainList();
					reloadBrainListToRm();
					console.log(`adding bot brain`);
					location.reload;
				})
				.catch((err) => {
					console.log(`ERROR : ${err}${err.stack}`);
				})
		}

		function removeBrain(botId) { //supprime un brain de Steeve par une requête PATCH
			let brainSelected = `${brainListElt.value}`;
			console.log("Brain selected : " + brainSelected);
			let myHeaders = new Headers();
			myHeaders.append('Content-Type', 'application/json');
			myHeaders.append('Accept', 'application/json');
			myHeaders.append('Set-Cookie', 'passPhrase=Hop');
			let brainRequest = { "brain": brainSelected };
			let myInit = {
				method: 'PATCH',
				headers: myHeaders,
				credentials: 'same-origin',
				mode: 'cors',
				cache: 'no-store',
				body: JSON.stringify(brainRequest)
			};
			console.log(typeof (myInit.body));
			let myURL = `http://localhost:3001/bot/remove/3011`;
			fetch(myURL, myInit)
				.then((httpResponse) => {
					return httpResponse.text()
				})
				.then((responseBody) => {
					reloadBotInfos();
					reloadBrainList();
					reloadBrainListToRm();
					console.log(`removing bot brain`);
					location.reload;
				})
				.catch((err) => {
					console.log(`ERROR : ${err}${err.stack}`);
				})
		}

		function patchStatus(botId) { //actualise le statut du bot par une requête PATCH
			let myHeaders = new Headers();
			myHeaders.append('Content-Type', 'application/json');
			myHeaders.append('Accept', 'application/json');
			myHeaders.append('Set-Cookie', 'passPhrase=Hop');
			let statusRequest = { "status": "online" };
			let myInit = {
				method: 'PATCH',
				headers: myHeaders,
				credentials: 'same-origin',
				mode: 'cors',
				cache: 'no-store',
				body: JSON.stringify(statusRequest)
			};
			console.log(typeof (myInit.body));
			let myURL = `http://localhost:3001/bot/status/3011`;
			fetch(myURL, myInit)
				.then((httpResponse) => {
					return httpResponse.text()
				})
				.then((responseBody) => {
					reloadBotInfos();
					reloadBrainList();
					reloadBrainListToRm();
					console.log(`updating status`);
				})
				.catch((err) => {
					console.log(`ERROR : ${err}${err.stack}`);
				})
		}
	</script>

<body>
	<header>
		<h1>Steeve</h1>
	</header>

	<ul id="infoListSELECT">
	</ul>

	<p>
		<label for="brainListSELECT">Add a brain:</label>
		<select id="brainListSELECT" name="brainName">
			<option value="">-- Please choose a brain to add</option>
		</select>
	</p>
	<button id="addBrainButton">ADD</button>

	<p>
		<label for="brainListToRmSELECT">Remove a brain:</label>
		<select id="brainListToRmSELECT" name="brainToRmName">
			<option value="">-- Please choose a brain to remove</option>
		</select>
	</p>
	<button id="rmBrainButton">REMOVE</button>

	<button id="retour" onclick=window.location.href="http://localhost:3001/botV2" ;>BACK</button>

</body>

<%- include('partials/footer'); -%>