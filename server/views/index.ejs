<%- include('partials/header'); -%>

	<script>
		document.addEventListener('DOMContentLoaded', init);

		let botListElt;
		let brainListElt;
		let mouthListElt;
		let modal;
		let inputTitle;
		let inputStatus;
		let addNewBotButton;
		let newBotButton;

		function init() { //actualisation de la liste des bots
			botListElt = document.getElementById("botListUL");
			brainListElt = document.getElementById("brainListUL");
			mouthListElt = document.getElementById("mouthListUL");
			modal = document.getElementById("newBotModal");
			inputTitle = document.getElementById("inputTitle");
			inputStatus = document.getElementById("inputStatus");

			reloadBotList();

			newBotButton = document.getElementById("newBotButton"); //bouton pour créer un bot
			newBotButton.addEventListener("click", () => { modal.style.display = "block"; });
			addNewBotButton = document.getElementById("addNewBotButton");
			addNewBotButton.addEventListener("click", createNewBot);
		}

		function reloadBotList() { //met à jour la liste de tous les bots par une requête GET
			//first, clean up
			console.log("Je reload la liste des bots");
			while (botListElt.firstChild) {
				botListElt.removeChild(botListElt.firstChild);
			}
			let myHeaders = new Headers();
			myHeaders.append('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
			myHeaders.append('Accept', 'application/json');
			myHeaders.append('Set-Cookie', 'passPhrase=Hop');

			let myInit = {
				method: 'GET',
				headers: myHeaders,
				credentials: 'same-origin',
				mode: 'cors',
				cache: 'no-store'
			};

			let myURL = `http://localhost:3001/bot`;

			fetch(myURL, myInit)
				.then((httpResponse) => {
					for (let field of httpResponse.headers) {
						console.log(`raw = ${field}`);
					}
					return httpResponse.json()
				})
				.then((setOfBots) => {
					for (let bot of setOfBots) {
						let item = document.createElement("option");
						item.setAttribute("value", bot.name);
						item.innerHTML += ` ${bot.name}`;
						botListElt.appendChild(item);
					}
				})
				.catch((err) => {
					console.log(`ERROR : ${err} ${err.stack}`);
				})
		}

		function initMouth() { //actualisation de la liste des mouths
			let mouthListElt;
			let chooseMouth;

			chooseMouth = document.getElementById("chooseMouth");
			mouthListElt = document.getElementById("mouthListUL");
			reloadMouthList();
		}

		function reloadBrainList() { //rechargement de la liste des brains par une requête GET
			//first, clean up
			while (brainListElt.firstChild) {
				brainListElt.removeChild(brainListElt.firstChild);
			}
			let myHeaders = new Headers();
			myHeaders.append('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
			myHeaders.append('Accept', 'application/json');
			myHeaders.append('Set-Cookie', 'passPhrase=Hop');

			let myInit = {
				method: 'GET',
				headers: myHeaders,
				credentials: 'same-origin',
				mode: 'cors',
				cache: 'no-store'
			};

			let myURL = `http://localhost:3001/brains`;

			fetch(myURL, myInit)
				.then((httpResponse) => {

					return httpResponse.json()
				})
				.then((setOfBrains) => {
					for (let brain of setOfBrains) {
						brainListElt.appendChild(createItem(brain));
					}
				})
				.catch((err) => {
					console.log(`ERROR : ${err}${err.stack}`);
				})
		}

		function reloadMouthList() { //rechargement de la liste des mouths par une requête GET
			//first, clean up
			while (mouthListElt.firstChild) {
				mouthListElt.removeChild(mouthListElt.firstChild);
			}
			let myHeaders = new Headers();
			myHeaders.append('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
			myHeaders.append('Accept', 'application/json');
			myHeaders.append('Set-Cookie', 'passPhrase=Hop');

			let myInit = {
				method: 'GET',
				headers: myHeaders,
				credentials: 'same-origin',
				mode: 'cors',
				cache: 'no-store'
			};

			let myURL = `http://localhost:3002/mouth`;

			fetch(myURL, myInit)
				.then((httpResponse) => {

					return httpResponse.json()
				})
				.then((setOfMouths) => {
					for (let mouth of setOfMouths) {
						let item = document.createElement("option");
						item.setAttribute("value", mouth.name);
						item.innerHTML += ` ${mouth.name}`;
						mouthListElt.appendChild(item);
					}
				})
				.catch((err) => {
					console.log(`ERROR : ${err}${err.stack}`);
				})
		}

	</script>

	<body>
		<nav>
			<ul>
				<li><a href="http://localhost:3001/botV2">ChatBots</a></li>
				<li><a href="http://localhost:3001/brainV2">Brains</a></li>
				<li><a href="http://localhost:3001/mouthV2">Mouth</a></li>
			</ul>
		</nav>

		<ul id="taskListUL">
		</ul>

		<main>
			<article>
				<p>This application can be used to talk with a chatbot using different mouth and brains.</p>
				<br></br>
				<p>You will be able to :</p>
				<p>-gather information on existing chatbots, brains, mouth</p>
				<p>-change or erase a brain associated with a chatbot</p>
				<p>-choose a mouth to talk with the chatbot</p>
				<p>-start a discussion with a chatbot</p>
				<br></br>
				<p>Warning : You will need to be authenticated in order to use the application.</p>
			</article>
		</main>

		<button id="newBotButton" onclick=window.location.href="./createBot" ;>TALK TO A CHATBOT</button>

	</body>

<%- include('partials/footer'); -%>