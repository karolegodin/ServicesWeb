<%- include('partials/header'); -%>

	<script>
		document.addEventListener('DOMContentLoaded', init);

		let botListElt;
		let brainListElt;
		let mouthListElt;
		let modal;
		let inputTitle;
		let inputStatus;
		let addNewBotButton;
		let newBotButton;

		function init() {
			botListElt = document.getElementById("botListUL");
			brainListElt = document.getElementById("brainListUL");
			mouthListElt = document.getElementById("mouthListUL");
			modal = document.getElementById("newBotModal");
			inputTitle = document.getElementById("inputTitle");
			inputStatus = document.getElementById("inputStatus");

			reloadBotList();
			//reloadBrainList();
			//reloadMouthList();
			//setInterval(reloadList,5000);

			newBotButton = document.getElementById("newBotButton"); //bouton pour créer un bot
			newBotButton.addEventListener("click", () => { modal.style.display = "block"; });
			addNewBotButton = document.getElementById("addNewBotButton");
			addNewBotButton.addEventListener("click", createNewBot);
			/*
			allBotsButton = document.getElementById("allBotsButton"); //bouton pour aller sur la page avec une liste de tous les bots
			allBotsButton.addEventListener("click",reloadBotList);
			allBrainsButton = document.getElementById("allBrainsButton");
			allBrainsButton.addEventListener("click",reloadBrainList); //bouton pour aller sur la page avec une liste de tous les brains
			allMouthsButton = document.getElementById("allMouthsButton");
			allMouthsButton.addEventListener("click",reloadMouthList);//bouton pour aller sur la page avec une liste de toutes les mouths
			*/
		}

		function reloadBotList() { //met à jour la liste de tous les bots
			//first, clean up
			console.log("Je reload la liste des bots");
			while (botListElt.firstChild) {
				botListElt.removeChild(botListElt.firstChild);
			}
			let myHeaders = new Headers();
			myHeaders.append('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
			myHeaders.append('Accept', 'application/json');
			myHeaders.append('Set-Cookie', 'passPhrase=Hop');

			let myInit = {
				method: 'GET',
				headers: myHeaders,
				credentials: 'same-origin',
				mode: 'cors',
				cache: 'no-store'
			};

			let myURL = `http://localhost:3001/bot`;

			fetch(myURL, myInit)
				.then((httpResponse) => {
					for (let field of httpResponse.headers) {
						console.log(`raw = ${field}`);
					}
					return httpResponse.json()
				})
				.then((setOfBots) => {
					for (let bot of setOfBots) {
						let item = document.createElement("option");
						item.setAttribute("value", bot.name);
						item.innerHTML += ` ${bot.name}`;
						botListElt.appendChild(item);
					}
				})
				.catch((err) => {
					console.log(`ERROR : ${err} ${err.stack}`);
				})
		}

		function initMouth() {
			let mouthListElt;
			let chooseMouth;

			chooseMouth = document.getElementById("chooseMouth");
			mouthListElt = document.getElementById("mouthListUL");
			reloadMouthList();
		}

		function reloadBrainList() {
			//first, clean up
			while (brainListElt.firstChild) {
				brainListElt.removeChild(brainListElt.firstChild);
			}
			let myHeaders = new Headers();
			myHeaders.append('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
			myHeaders.append('Accept', 'application/json');
			myHeaders.append('Set-Cookie', 'passPhrase=Hop');

			let myInit = {
				method: 'GET',
				headers: myHeaders,
				credentials: 'same-origin',
				mode: 'cors',
				cache: 'no-store'
			};

			let myURL = `http://localhost:3001/brains`;

			fetch(myURL, myInit)
				.then((httpResponse) => {

					return httpResponse.json()
				})
				.then((setOfBrains) => {
					for (let brain of setOfBrains) {
						//let item = document.createElement("option");
						//item.setAttribute('value',person.personId);
						//item.innerHTML=person.personId;
						//personListElt.appendChild(item);
						console.log(`Je suis dans reloadList, le nom du brain est ${brain.name}`)
						brainListElt.appendChild(createItem(brain));
					}
				})
				.catch((err) => {
					console.log(`ERROR : ${err}${err.stack}`);
				})
		}

		function reloadMouthList() {
			//first, clean up
			while (mouthListElt.firstChild) {
				mouthListElt.removeChild(mouthListElt.firstChild);
			}
			let myHeaders = new Headers();
			myHeaders.append('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
			myHeaders.append('Accept', 'application/json');
			myHeaders.append('Set-Cookie', 'passPhrase=Hop');

			let myInit = {
				method: 'GET',
				headers: myHeaders,
				credentials: 'same-origin',
				mode: 'cors',
				cache: 'no-store'
			};

			let myURL = `http://localhost:3002/mouth`;

			fetch(myURL, myInit)
				.then((httpResponse) => {

					return httpResponse.json()
				})
				.then((setOfMouths) => {
					for (let mouth of setOfMouths) {
						let item = document.createElement("option");
						item.setAttribute("value", mouth.name);
						item.innerHTML += ` ${mouth.name}`;
						mouthListElt.appendChild(item);
					}
				})
				.catch((err) => {
					console.log(`ERROR : ${err}${err.stack}`);
				})
		}


		function createItem(bot) {
			let item = document.createElement("li");

			// Adding a DELETE Button
			let delBtn = document.createElement("button");
			delBtn.innerHTML = "DELETE";
			let id = `del_${bot.id}`;

			delBtn.setAttribute("id", id);
			delBtn.setAttribute("onclick", `deletebot(${bot.id})`);
			//delBtn.addEventListener("click",()=>{deletebot(bot.id)});
			item.appendChild(delBtn);

			// Adding a PUT Button
			let putBtn = document.createElement("button");
			putBtn.innerHTML = "PUT";
			putBtn.setAttribute("onclick", `replacebot(${bot.id})`);
			//putBtn.addEventListener("click",()=>{replacebot(bot.id)});
			item.appendChild(putBtn);

			// Adding a PATCH Button
			let patchBtn = document.createElement("button");
			patchBtn.innerHTML = "PATCH";
			patchBtn.setAttribute("onclick", `updatebot(${bot.id})`);
			//patchBtn.addEventListener("click",()=>{updatebot(bot.id)});
			item.appendChild(patchBtn);

			let a = document.createElement("a");
			a.href = ` ${bot.url}`;
			a.innerHTML = ` ${bot.url}`;
			item.appendChild(a);
			return item;
		}

		function deleteBot(bot) {

			let myHeaders = new Headers();
			myHeaders.append('Content-Type', 'application/json');

			let myInit = {
				method: 'DELETE',
				headers: myHeaders,
				mode: 'cors',
				cache: 'default'
			};
			let myURL = `http://localhost:3001/bots/${botId}`;
			//let myURL = "http://localhost:3001/v2/tasks"+botId;
			fetch(myURL, myInit)
				.then((httpResponse) => {
					return httpResponse.text()
				})
				.then((returnString) => {
					reloadList();
					console.log(`All is OK ${returnString}`)
				})
				.catch((err) => {
					console.log(`ERROR : ${err}`);
				})
		}

		function replaceBot(taskId) {
			console.log(`replacing bot with Id ${botId}`);
			//TODO
			//Obvioulsly, you will need to launch a modal
		}

		function updateBot(botId) {
			console.log(`updating bot with Id ${botId}`);
			//TODO
			modal.style.display = "none"; // Make the modal disapear

			//Create the request
			let myHeaders = new Headers();
			myHeaders.append('Content-Type', 'application/json');
			let payload = {
				title: inputTitle.value,
				status: inputStatus.value
			};
			let myBody = JSON.stringify(payload);
			let myInit = {
				method: 'PATCH',
				headers: myHeaders,
				mode: 'cors',
				cache: 'default',
				body: myBody
			};
			let myURL = `http://localhost:3001/bots/${taskId}`;

			//launch the request
			fetch(myURL, myInit)
				.then((httpResponse) => {
					return httpResponse.text();
				})
				.then((responseBody) => {
					reloadList();
					//clear fields
					inputTitle.value = "";
					inputStatus.value = "";
					console.log(`response is ${responseBody}`);
				})
				.catch((err) => {
					console.log(`ERROR : ${err}`);
				})
		}

		function removePersonFromTask(taskId) {
			console.log(`removing person from task with Id ${taskId}`);
		}

		function createNewBot() {

			modal.style.display = "none"; // Make the modal disapear

			//Create the request
			let myHeaders = new Headers();
			myHeaders.append('Content-Type', 'application/json');
			let payload = {
				id: inputId.value,
				name: inputName.value
			};
			let myBody = JSON.stringify(payload);
			let myInit = {
				method: 'POST',
				headers: myHeaders,
				mode: 'cors',
				cache: 'default',
				body: myBody
			};
			let myURL = "http://localhost:3001/";

			//launch the request
			fetch(myURL, myInit)
				.then((httpResponse) => {
					return httpResponse.text();
				})
				.then((responseBody) => {
					reloadList();
					//clear fields
					inputId.value = "";
					inputName.value = "";
					console.log(`response is ${responseBody}`);
				})
				.catch((err) => {
					console.log(`ERROR : ${err}`);
				})
		}

	</script>

	<body>
		<nav>
			<ul>
				<li><a href="http://localhost:3001/botV2">ChatBots</a></li>
				<li><a href="http://localhost:3001/brainV2">Brains</a></li>
				<li><a href="http://localhost:3001/mouthV2">Mouth</a></li>
			</ul>
		</nav>

		<ul id="taskListUL">
		</ul>

		<main>
			<article>
				<p>This application can be used to talk with a chatbot using different mouth and brains.</p>
				<br></br>
				<p>You will be able to :</p>
				<p>-gather information on existing chatbots, brains, mouth</p>
				<p>-change or erase a brain associated with a chatbot</p>
				<p>-choose a mouth to talk with the chatbot</p>
				<p>-start a discussion with a chatbot</p>
				<br></br>
				<p>Warning : You will need to be authenticated in order to use the application.</p>
			</article>
		</main>

		<button id="newBotButton" onclick=window.location.href="./createBot" ;>TALK TO A CHATBOT</button>

	</body>

<%- include('partials/footer'); -%>