<%- include('partials/header'); -%>

	<script>
		document.addEventListener('DOMContentLoaded', initBots);

		let botListElt;
		let brainListElt;
		let addNewBotButton;
		let talkBotButton;
		let chooseBot;
		let mouthListElt;

		function initBots() {
			botListElt = document.getElementById("botListSELECT");

			//DECOMMENTER LORSQUE LES CLASSES DES BOTS ET BRAINS SONT TERMINEES
			reloadBotList();
			//reloadMouthList();
			//reloadBrainList();

			//newTaskButton = document.getElementById("newTaskButton");
			//newTaskButton.addEventListener("click",()=>{modal.style.display = "block";});
			//addNewTaskButton = document.getElementById("addNewTaskButton");
			//addNewTaskButton.addEventListener("click",createNewTask);
			//chooseBot = document.getElementById("chooseBot");
			talkBotButton = document.getElementById("talkBotButton");
			talkBotButton.addEventListener("click", talkingbot);


		}
		function reloadBotList() { //met à jour la liste de tous les bots
			//first, clean up
			console.log("Je reload la liste des bots");
			while (botListElt.firstChild) {
				botListElt.removeChild(botListElt.firstChild);
			}
			let myHeaders = new Headers();
			myHeaders.append('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
			myHeaders.append('Accept', 'application/json');
			myHeaders.append('Set-Cookie', 'passPhrase=Hop');

			let myInit = {
				method: 'GET',
				headers: myHeaders,
				credentials: 'same-origin',
				mode: 'cors',
				cache: 'no-store'
			};

			let myURL = `http://localhost:3001/bot`;

			fetch(myURL, myInit)
				.then((httpResponse) => {
					for (let field of httpResponse.headers) {
						console.log(`raw = ${field}`);
					}
					return httpResponse.json()
				})
				.then((setOfBots) => {
					for (let bot of setOfBots) {
						let item = document.createElement("option");
						item.setAttribute("value", bot.name);
						item.innerHTML += ` ${bot.name}`;
						botListElt.appendChild(item);
					}
				})
				.catch((err) => {
					console.log(`ERROR : ${err} ${err.stack}`);
				})
		}

		document.addEventListener('DOMContentLoaded', initMouth);

		function initMouth() {
			//let chooseMouth;

			//chooseMouth = document.getElementById("chooseMouth");
			mouthListElt = document.getElementById("mouthListSELECT");
			reloadMouthList();
		}

		function reloadBrainList() {
			//first, clean up
			while (brainListElt.firstChild) {
				brainListElt.removeChild(brainListElt.firstChild);
			}
			let myHeaders = new Headers();
			myHeaders.append('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
			myHeaders.append('Accept', 'application/json');
			myHeaders.append('Set-Cookie', 'passPhrase=Hop');

			let myInit = {
				method: 'GET',
				headers: myHeaders,
				credentials: 'same-origin',
				mode: 'cors',
				cache: 'no-store'
			};

			let myURL = `http://localhost:3001/brains`;

			fetch(myURL, myInit)
				.then((httpResponse) => {

					return httpResponse.json()
				})
				.then((setOfBrains) => {
					for (let brain of setOfBrains) {
						//let item = document.createElement("option");
						//item.setAttribute('value',person.personId);
						//item.innerHTML=person.personId;
						//personListElt.appendChild(item);
						console.log(`Je suis dans reloadList, le nom du brain est ${brain.name}`)
						brainListElt.appendChild(createItem(brain));
					}
				})
				.catch((err) => {
					console.log(`ERROR : ${err}${err.stack}`);
				})
		}

		function reloadMouthList() {
			//first, clean up
			while (mouthListElt.firstChild) {
				mouthListElt.removeChild(mouthListElt.firstChild);
			}
			let myHeaders = new Headers();
			myHeaders.append('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
			myHeaders.append('Accept', 'application/json');
			myHeaders.append('Set-Cookie', 'passPhrase=Hop');

			let myInit = {
				method: 'GET',
				headers: myHeaders,
				credentials: 'same-origin',
				mode: 'cors',
				cache: 'no-store'
			};

			let myURL = `http://localhost:3002/mouth`;

			fetch(myURL, myInit)
				.then((httpResponse) => {

					return httpResponse.json()
				})
				.then((setOfMouths) => {
					for (let mouth of setOfMouths) {
						console.log(setOfMouths);
						let item = document.createElement("option");
						item.setAttribute("value", mouth.name);
						item.innerHTML += ` ${mouth.name}`;
						mouthListElt.appendChild(item);
						console.log(mouthListElt);
					}
				})
				.catch((err) => {
					console.log(`ERROR : ${err}${err.stack}`);
				})
		}

		function talkingbot() {
			let mouthSelected = mouthListElt.value;
			let botSelected = botListElt.value;

			if (mouthSelected == 'Socket') {

				if(botSelected == 'Steeve'){
					window.open('http://localhost:3011/socketio/', '_blank');
				}

				if(botSelected == 'Aiden'){
					window.open('http://localhost:3012/socketio/', '_blank');
				}

				if(botSelected == 'Tom'){
					window.open('http://localhost:3013/socketio/', '_blank');
				}
			}

			if (mouthSelected == 'Discord') {
				window.open('https://discord.gg/FyKz3kajW7', '_blank');
			}
		}
	</script>

	<body>

		<header>
			<h1>Parler à un ChatBot</h1>
		</header>

		<ul id="botListUL">
		</ul>

		<ul id="mouthListUL">
		</ul>

		<p>
			<label for="botListSELECT">Bot:</label>
			<select id="botListSELECT" name="botName">
				<option value="">-- Please choose a bot</option>

			</select>
		</p>

		<p>
			<label for="mouthListSELECT">Mouth:</label>
			<select id="mouthListSELECT" name="mouthName">
				<option value="">-- Please choose a mouth</option>
			</select>
		</p>
		<button id="talkBotButton">TALK TO A CHATBOT</button>

		<button id="retour" onclick=window.location.href="http://localhost:3001/" ;>RETOUR</button>

	</body>

<%- include('partials/footer'); -%>